<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:tns="urn:assets/payments/FS"
                  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  name="FS"
                  targetNamespace="urn:assets/payments/FS">

  <wsdl:documentation>Definition of a Web API service for AV FS.</wsdl:documentation>

  <!--
      The `types` element defines the data types (XML elements)
      that are used by the web service.
   -->
  <wsdl:types>
    <xsd:schema targetNamespace="urn:assets/payments/FS">

          <xsd:complexType name="LoginResponse">
            <xsd:sequence>
              <xsd:element name="Result" type="xsd:string"/>
              <xsd:element name="ValidAccounts" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
          </xsd:complexType>

          <xsd:complexType name="TokenRequest">
            <xsd:sequence>
              <xsd:element name="Req" type="xsd:string"/>
            </xsd:sequence>
          </xsd:complexType>
          <xsd:complexType name="TokenResponse">
            <xsd:sequence>
              <xsd:element name="Result" type="xsd:string"/>
            </xsd:sequence>
          </xsd:complexType>

          <xsd:complexType name="TransferRequest">
            <xsd:sequence>
              <xsd:element name="strAccountNumberFrom" type="xsd:string"/>
              <xsd:element name="strAccountNumberTo" type="xsd:string"/>
              <xsd:element name="fAmount" type="xsd:float"/>
              <xsd:element name="strDescription" type="xsd:string"/>
              <xsd:element name="check" type="xsd:string"/>
              <xsd:element name="token" type="xsd:string"/>
            </xsd:sequence>
          </xsd:complexType>
          <xsd:complexType name="TransferResponse">
            <xsd:sequence>
              <xsd:element name="Result" type="xsd:string"/>
            </xsd:sequence>
          </xsd:complexType>

          <xsd:complexType name="testTransferRequest">
            <xsd:sequence>
              <xsd:element name="strAccountNumberFrom" type="xsd:string"/>
              <xsd:element name="strAccountNumberTo" type="xsd:string"/>
              <xsd:element name="fAmount" type="xsd:float"/>
              <xsd:element name="strDescription" type="xsd:string"/>
            </xsd:sequence>
          </xsd:complexType>
          <xsd:complexType name="testTransferResponse">
            <xsd:sequence>
              <xsd:element name="Result" type="xsd:string"/>
            </xsd:sequence>
          </xsd:complexType>

    </xsd:schema>
  </wsdl:types>

  <!--
      A wsdl `message` element is used to define a message
      exchanged between a web service, consisting of zero
      or more `part`s.
   -->
  <wsdl:message name="LoginRequest_msg">
    <wsdl:part name="strPID" type="xsd:string"/>
    <wsdl:part name="strPassword" type="xsd:string"/>
  </wsdl:message>
  <wsdl:message name="LoginResponse_msg">
    <wsdl:part name="return" type="tns:LoginResponse"/>
  </wsdl:message>

  <wsdl:message name="TokenRequest_msg">
    <wsdl:part name="param" type="tns:TokenRequest"/>
  </wsdl:message>
  <wsdl:message name="TokenResponse_msg">
    <wsdl:part name="return" type="tns:TokenResponse"/>
  </wsdl:message>

  <wsdl:message name="addTransferRequest_msg">
    <wsdl:part name="param" type="tns:TransferRequest"/>
  </wsdl:message>
  <wsdl:message name="addTransferResponse_msg">
    <wsdl:part name="return" type="tns:TransferResponse"/>
  </wsdl:message>

  <wsdl:message name="testTransferRequest_msg">
    <wsdl:part name="param" type="tns:testTransferRequest"/>
  </wsdl:message>
  <wsdl:message name="testTransferResponse_msg">
    <wsdl:part name="return" type="tns:testTransferResponse"/>
  </wsdl:message>

  <!--
      A WSDL `portType` is used to combine multiple `message`s
      (e.g. input, output) into a single operation.
   -->
  <wsdl:portType name="FS_port">
    
    <wsdl:operation name="login">
      <wsdl:input message="tns:LoginRequest_msg"/>
      <wsdl:output message="tns:LoginResponse_msg"/>
    </wsdl:operation>

    <wsdl:operation name="requestTransferToken">
      <wsdl:input message="tns:TokenRequest_msg"/>
      <wsdl:output message="tns:TokenResponse_msg"/>
    </wsdl:operation>

    <wsdl:operation name="addTransfer">
      <wsdl:input message="tns:addTransferRequest_msg"/>
      <wsdl:output message="tns:addTransferResponse_msg"/>
    </wsdl:operation>

    <wsdl:operation name="testTransfer">
      <wsdl:input message="tns:testTransferRequest_msg"/>
      <wsdl:output message="tns:testTransferResponse_msg"/>
    </wsdl:operation>

  </wsdl:portType>

  <!--
      The `binding` element defines exactly how each
      `operation` will take place over the network.
      In this case, we are using SOAP.
   -->
  <wsdl:binding name="FS_SoapBinding" type="tns:FS_port">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>

    <wsdl:operation name="login">
      <soap:operation soapAction="urn:assets/payments/FS/login"/>
      <wsdl:input>
        <soap:body use="encoded"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded"/>
      </wsdl:output>
    </wsdl:operation>

    <wsdl:operation name="requestTransferToken">
      <soap:operation soapAction="urn:assets/payments/FS/requestTransferToken"/>
      <wsdl:input>
        <soap:body use="encoded"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded"/>
      </wsdl:output>
    </wsdl:operation>

    <wsdl:operation name="addTransfer">
      <soap:operation soapAction="urn:assets/payments/FS/addTransfer"/>
      <wsdl:input>
        <soap:body use="encoded"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded"/>
      </wsdl:output>
    </wsdl:operation>

    <wsdl:operation name="testTransfer">
      <soap:operation soapAction="urn:assets/payments/FS/testTransfer"/>
      <wsdl:input>
        <soap:body use="encoded"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded"/>
      </wsdl:output>
    </wsdl:operation>

  </wsdl:binding>

  <!--
      The `service` element finally says where the service
      can be accessed from - in other words, its endpoint.
   -->
  <wsdl:service name="FS">
    <wsdl:port binding="tns:FS_SoapBinding" name="FS_port">
      <soap:address location="http://container-sandbox.financialservice.org.in:8812/server3.php"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
