<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                  xmlns:tns="urn:FS"
                  xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                  xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
                  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                  name="FS"
                  targetNamespace="urn:FS">

  <wsdl:documentation>Definition of a Web API service for AV FS.</wsdl:documentation>

  <!--
      The `types` element defines the data types (XML elements)
      that are used by the web service.
   -->
  <!--wsdl:types>
    <xsd:schema targetNamespace="urn:FS">
       <xsd:element name="LoginInfo">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="User" type="xsd:string"/>
            <xsd:element name="Password" type="xsd:string"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      
      <xsd:element name="LoginResponseValue">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Result" type="xsd:string" minOccurs="0"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
  </wsdl:types-->


  <!--
      A wsdl `message` element is used to define a message
      exchanged between a web service, consisting of zero
      or more `part`s.
   -->

  <wsdl:message name="LoginRequest">
    <!--wsdl:part element="LoginInfo" name="parameters"/-->
    <wsdl:part name="User" type="xsd:string"/>
    <wsdl:part name="Password" type="xsd:string"/>
  </wsdl:message>
  <wsdl:message name="LoginResponse">
    <wsdl:part name="Result" type="xsd:string" minOccurs="0"/>
  </wsdl:message>


  <!--
      A WSDL `portType` is used to combine multiple `message`s
      (e.g. input, output) into a single operation.

      Here we define three synchronous (input/output) operations
      and the `message`s that must be used for each.
   -->
  <wsdl:portType name="FS_port">
    <wsdl:operation name="FS_Login">
      <wsdl:input message="LoginRequest"/>
      <wsdl:output message="LoginResponse"/>
    </wsdl:operation>
  </wsdl:portType>

  <!--
      The `binding` element defines exactly how each
      `operation` will take place over the network.
      In this case, we are using SOAP.
   -->
  <wsdl:binding name="FS_SoapBinding" type="FS_port">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="FS_Login">
      <soap:operation soapAction="urn:FS#FS_Login" style="rpc"/>
      <!--soap:operation soapAction="urn:FS#FS_Login"/-->
      <wsdl:input>
        <soap:body use="encoded" namespace="urn:FS"
          encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn:FS"
          encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>

  <!--
      The `service` element finally says where the service
      can be accessed from - in other words, its endpoint.
   -->
  <wsdl:service name="FS">
    <wsdl:port binding="FS_SoapBinding" name="FS_port">
      <soap:address location="http://container-sandbox.financialservice.org.in:8812/server3.php"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
